@use "sass:math";

$grid-cols: 12;

$grid-gaps: (
    "0": 0,
    "1": 10px,
    "2": 15px,
    "3": 20px,
    "4": 30px,
    "5": 35px,
    "6": 45px,
    "7": 55px
);

$justify-values: flex-start, flex-end, center, space-between, space-around;
$align-values: stretch, center, flex-start, flex-end, space-around, space-between, space-evenly;

.container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}

.container-fluid {
    width: 100%;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}

.row {
    display: flex;
    flex-flow: row wrap;
}

//grid gap
@each $key, $val in $grid-gaps {
    .gap-#{$key} > * {
        padding: $val;
    }

    .gap-#{$key} {
        margin-left: -$val;
        margin-right: -$val;
    }
}

//justify content
@each $val in $justify-values {
    .justify-#{$val} {
        justify-content: $val;
    }
}

//align content
@each $val in $align-values {
    .align-#{$val} {
        flex-wrap: wrap;
        align-content: $val;
    }
}

//grid system
@include xs {
    @for $i from 1 through $grid-cols {
        .col-xs-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i *100%, $grid-cols);
        }
    }
}

@include sm {
    @for $i from 1 through $grid-cols {
        .col-sm-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i *100%, $grid-cols);
        }
    }
}

@include md {
    @for $i from 1 through $grid-cols {
        .col-md-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i *100%, $grid-cols);
        }
    }
}

@include lg {
    @for $i from 1 through $grid-cols {
        .col-lg-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i *100%, $grid-cols);
        }
    }
}

@include xl {
    @for $i from 1 through $grid-cols {
        .col-xl-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i *100%, $grid-cols);
        }
    }
}